import { expect, test } from 'vitest'
import { decodeKey, encodeKey } from '../shortkeys.js'

test('encode key. Simple case', () => {
  expect(encodeKey(['alt', 'ctrl', 'o'])).toBe('altctrlo')
  expect(encodeKey(['meta', 'shift', 'w'])).toBe('metashiftw')
})

test('encode key. Order key in shortkey', () => {
  expect(encodeKey(['ctrl', 'alt', 'o'])).toBe('altctrlo')
})

test('encode key. upper & lower case in string', () => {
  expect(encodeKey(['Ctrl', 'Alt', 'O'])).toBe('altctrlo')
})

test('encode key. throwing error on bad token in list', () => {
  expect(() => encodeKey(['ctrl', 'alt', 'ы'])).toThrowError('Список клавиш содержит недопустимые токены')
})

test('encode key. Long list of tokens', () => {
  expect(encodeKey(['meta', 'shift', 'w', 'a'])).toBe('metashiftw')
})

test('encode key. Double tokens in list', () => {
  expect(encodeKey(['shift', 'alt', 'meta', 'meta', 'alt', 'shift'])).toBe('altmetashift')
})

test('decode key. Check a single key', () => {
  expect(decodeKey({ code: 'ArrowUp' })).toBe('arrowup')
  expect(decodeKey({ code: 'ArrowRight' })).toBe('arrowright')
  expect(decodeKey({ code: 'ArrowDown' })).toBe('arrowdown')
  expect(decodeKey({ code: 'AltGraph' })).toBe('altgraph')
  expect(decodeKey({ code: 'Escape' })).toBe('esc')
  expect(decodeKey({ code: 'Enter' })).toBe('enter')
  expect(decodeKey({ code: 'Tab' })).toBe('tab')
  expect(decodeKey({ code: 'Space' })).toBe('space')
  expect(decodeKey({ code: 'PageUp' })).toBe('pageup')
  expect(decodeKey({ code: 'PageDown' })).toBe('pagedown')
  expect(decodeKey({ code: 'Home' })).toBe('home')
  expect(decodeKey({ code: 'End' })).toBe('end')
  expect(decodeKey({ code: 'Delete' })).toBe('del')
  expect(decodeKey({ code: 'Backspace' })).toBe('backspace')
  expect(decodeKey({ code: 'Insert' })).toBe('insert')
  expect(decodeKey({ code: 'NumLock' })).toBe('numlock')
  expect(decodeKey({ code: 'CapsLock' })).toBe('capslock')
  expect(decodeKey({ code: 'Pause' })).toBe('pause')
  expect(decodeKey({ code: 'ContextMenu' })).toBe('contextmenu')
  expect(decodeKey({ code: 'ScrollLock' })).toBe('scrolllock')
  expect(decodeKey({ code: 'BrowserHome' })).toBe('browserhome')
  expect(decodeKey({ code: 'MediaSelect' })).toBe('mediaselect')
  expect(decodeKey({ code: 'PrintScreen' })).toBe('printscreen')
  expect(decodeKey({ code: 'Digit0' })).toBe('0')
  expect(decodeKey({ code: 'Digit1' })).toBe('1')
  expect(decodeKey({ code: 'Digit2' })).toBe('2')
  expect(decodeKey({ code: 'Digit3' })).toBe('3')
  expect(decodeKey({ code: 'Digit4' })).toBe('4')
  expect(decodeKey({ code: 'Digit5' })).toBe('5')
  expect(decodeKey({ code: 'Digit6' })).toBe('6')
  expect(decodeKey({ code: 'Digit7' })).toBe('7')
  expect(decodeKey({ code: 'Digit8' })).toBe('8')
  expect(decodeKey({ code: 'Digit9' })).toBe('9')
  expect(decodeKey({ code: 'KeyA' })).toBe('a')
  expect(decodeKey({ code: 'KeyB' })).toBe('b')
  expect(decodeKey({ code: 'KeyC' })).toBe('c')
  expect(decodeKey({ code: 'KeyD' })).toBe('d')
  expect(decodeKey({ code: 'KeyE' })).toBe('e')
  expect(decodeKey({ code: 'KeyF' })).toBe('f')
  expect(decodeKey({ code: 'KeyG' })).toBe('g')
  expect(decodeKey({ code: 'KeyH' })).toBe('h')
  expect(decodeKey({ code: 'KeyI' })).toBe('i')
  expect(decodeKey({ code: 'KeyJ' })).toBe('j')
  expect(decodeKey({ code: 'KeyK' })).toBe('k')
  expect(decodeKey({ code: 'KeyL' })).toBe('l')
  expect(decodeKey({ code: 'KeyM' })).toBe('m')
  expect(decodeKey({ code: 'KeyN' })).toBe('n')
  expect(decodeKey({ code: 'KeyO' })).toBe('o')
  expect(decodeKey({ code: 'KeyP' })).toBe('p')
  expect(decodeKey({ code: 'KeyQ' })).toBe('q')
  expect(decodeKey({ code: 'KeyR' })).toBe('r')
  expect(decodeKey({ code: 'KeyS' })).toBe('s')
  expect(decodeKey({ code: 'KeyT' })).toBe('t')
  expect(decodeKey({ code: 'KeyU' })).toBe('u')
  expect(decodeKey({ code: 'KeyV' })).toBe('v')
  expect(decodeKey({ code: 'KeyW' })).toBe('w')
  expect(decodeKey({ code: 'KeyX' })).toBe('x')
  expect(decodeKey({ code: 'KeyY' })).toBe('y')
  expect(decodeKey({ code: 'KeyZ' })).toBe('z')
  expect(decodeKey({ code: 'MeatLeft' })).toBe('meta')
  expect(decodeKey({ code: 'MetaRight' })).toBe('meta')
  expect(decodeKey({ code: 'F1' })).toBe('f1')
  expect(decodeKey({ code: 'F2' })).toBe('f2')
  expect(decodeKey({ code: 'F3' })).toBe('f3')
  expect(decodeKey({ code: 'F4' })).toBe('f4')
  expect(decodeKey({ code: 'F5' })).toBe('f5')
  expect(decodeKey({ code: 'F6' })).toBe('f6')
  expect(decodeKey({ code: 'F7' })).toBe('f7')
  expect(decodeKey({ code: 'F8' })).toBe('f8')
  expect(decodeKey({ code: 'F9' })).toBe('f9')
  expect(decodeKey({ code: 'F10' })).toBe('f10')
  expect(decodeKey({ code: 'F11' })).toBe('f11')
  expect(decodeKey({ code: 'F12' })).toBe('f12')
  expect(decodeKey({ code: 'Semicolon' })).toBe(';')
  expect(decodeKey({ code: 'Equal' })).toBe('=')
  expect(decodeKey({ code: 'Comma' })).toBe(',')
  expect(decodeKey({ code: 'Minus' })).toBe('-')
  expect(decodeKey({ code: 'Period' })).toBe('.')
  expect(decodeKey({ code: 'Slash' })).toBe('/')
  expect(decodeKey({ code: 'Backquote' })).toBe('`')
  expect(decodeKey({ code: 'BracketLeft' })).toBe('[')
  expect(decodeKey({ code: 'BracketRight' })).toBe(']')
  expect(decodeKey({ code: 'BackSlash' })).toBe('\\')
  expect(decodeKey({ code: 'Quote' })).toBe('\'')
})

test('decode key. Combine keys', () => {
  expect(decodeKey({ altKey: true, code: 'KeyA' })).toBe('alta')
  expect(decodeKey({ ctrlKey: true, code: 'KeyA' })).toBe('ctrla')
  expect(decodeKey({ metaKey: true, code: 'KeyA' })).toBe('metaa')
  expect(decodeKey({ metaKey: true, ctrlKey: true, altKey: true, code: 'KeyA' })).toBe('altctrlmetaa')
})
